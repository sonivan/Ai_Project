# -*- coding: utf-8 -*-
"""AI_Project_VanshikhaSoni.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iZM_s7UYOwnI2h-NZGr-_vOBkvseAUxZ
"""

!pip install pycaret

from pycaret.utils import enable_colab
enable_colab()

!wget -q https://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-white.csv

import pandas as pd
df_wine = pd.read_csv('/content/winequality-white.csv',sep=';')
df_wine

df_wine['quality'] = df_wine.quality.astype('category')
df_wine.dtypes

#check the shape of data
df_wine.shape

data = df_wine.sample(frac=0.9, random_state=786)
data_unseen = df_wine.drop(data.index)

data.reset_index(drop=True, inplace=True)
data_unseen.reset_index(drop=True, inplace=True)

print('Data for Modeling: ' + str(df_wine.shape))
print('Unseen Data For Predictions: ' + str(data_unseen.shape))

from pycaret.classification import *
exp_mclf101 = setup(data = df_wine, target = 'quality', session_id=123)

best = compare_models()

dt = create_model('dt')

#trained model object is stored in the variable 'dt'. 
print(dt)

knn = create_model('knn')

lr = create_model('lr')

tuned_dt = tune_model(dt)

#tuned model object is stored in the variable 'tuned_dt'. 
print(tuned_dt)

import numpy as np
tuned_knn = tune_model(knn, custom_grid = {'n_neighbors' : np.arange(0,50,1)})

tuned_lr = tune_model(lr)

plot_model(tuned_knn, plot = 'confusion_matrix')

plot_model(tuned_knn, plot = 'class_report')

plot_model(tuned_knn, plot='boundary')

plot_model(tuned_knn, plot = 'error')

evaluate_model(tuned_knn)

predict_model(tuned_knn);

final_knn = finalize_model(tuned_knn)

#Final K Nearest Neighbour parameters for deployment
print(final_knn)

unseen_predictions = predict_model(final_knn, data=data_unseen)
unseen_predictions.head()

save_model(final_knn,'Final KNN Model 08Feb2020')

saved_final_knn = load_model('Final KNN Model 08Feb2020')

new_prediction = predict_model(saved_final_knn, data=data_unseen)

new_prediction.head()

